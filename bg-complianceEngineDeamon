#!/usr/bin/env bash

source /usr/lib/bg_core.sh

import Collect.PluginType    ;$L1;$L2
import Standards.PluginType  ;$L1;$L2
import Config.PluginType     ;$L1;$L2

# read the daemon config file and initialize the environment for the main daemon algorithm
# this will be called later in this script when the daemon starts and also when reload
# (SIGHUP) signal is sent
function loadDaemonConfig()
{
	daemonLog "loading configuration"
	local logVerbosity; iniParamGet -R logVerbosity "/etc/${daemonName}.conf"  "." "logVerbosity"
	daemonLogSetup --verbosity=${logVerbosity:-1}
}

daemonDeclare "$@"
oob_invokeOutOfBandSystem "$@"

[ "$bgProductionMode" == "production" ] && [ "$USER" != "compEngine" ] && assertError "The compliance engine daemon is meant to be ran by the 'compEngine' user"

daemonLog "Starting up..."

loadDaemonConfig


while ! daemonCheckForSignal INT TERM; do

	# handle request to reload config
	if daemonCheckForSignal SIGHUP; then
		loadDaemonConfig
	fi

	# in dev mode we run as the user and rely on bgsudo inside the scripts escalating when needed
	if [ "$bgProductionMode" == "development" ]; then
bgtraceVars -1 -l"starting ..." daemonVerbosity
		bg-collectCntr   runAll --verbosity=${daemonVerbosity:-1}
bgtraceVars -1 -l"   finished collect "
		bg-standardsCntr runAll --verbosity=${daemonVerbosity:-1}
bgtraceVars -1 -l"   finished standards "
		bg-configCntr    runAll --verbosity=${daemonVerbosity:-1}
bgtraceVars -1 -l"done"
	else
		bgsudo -u "collectuser" bg-collectCntr   runAll --verbosity=${daemonVerbosity:-1}
		bgsudo -u "checkuser"   bg-standardsCntr runAll --verbosity=${daemonVerbosity:-1}
		bgsudo -u "applyuser"   bg-configCntr    runAll --verbosity=${daemonVerbosity:-1}
	fi | daemonLog --pipe
	bgsleep 60
done

daemonLog "Shutting down..."
daemonOut
