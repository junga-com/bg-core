#!/bin/bash

###############################################################################
# Includes and defines

packageName=bg-core

source /usr/lib/bg_core.sh
import Standards.PluginType ;$L1;$L2

cmds="list report run runAll activate deactivate"


###############################################################################
# Functions

# inspect the command line and if sudo is required set user="root"
# set group="<someGroup" if known. Typically the group should not be hardcoded
# see man bg-overviewOutOfBandScriptFunctions for details
function oob_getRequiredUserAndGroup()
{
	local -A clInput; bgCmdlineParse -RclInput "<glean>" "$@"; shift "${clInput[shiftCount]}"

	local cmd="$1"
	case $cmd in
		# activate)   echo "root" ;;
		# deactivate) echo "root" ;;
		*) echo "" ;;
	esac
}

# Use this function to provide BC suggestions for positional parameters
# see man bg-overviewOutOfBandScriptFunctions for details
function printBashCompletion()
{
	local words cword cur prev optWords posWords posCwords
	parseForBashCompletion --compat2 words cword cur prev optWords posWords posCwords "$@"

	local cmd="${posWords[1]}"
	local pluginID="${posWords[2]}"

	case $cmd:$posCwords in
		*:1) echo "$cmds" ;;

		list:*) echo "--activeStandards --short --full" ;;

		run:2) echo "<StandardsPluginName>"; $Standards::list --short ;;

		activate:2)   echo "<StandardsPluginName>"; $Standards::list --short ;;
		deactivate:2) echo "<StandardsPluginName>"; $Standards::list --short ;;
	esac
	exit
}



###############################################################################
# Input handling

invokeOutOfBandSystem "$@"


###############################################################################
# Main script

cmd="$1"; shift

case ${cmd:-report} in
	list)         $Standards::list       "$@" ;;
	report)       $Standards::report     "$@" ;;
	activate)     $Standards::activate   "$@" ;;
	deactivate)   $Standards::deactivate "$@" ;;
	run)          $Standards::run        "$@" ;;
	runAll)       $Standards::runAll     "$@" ;;
	*) assertError "unknown command '$cmd'"
esac
