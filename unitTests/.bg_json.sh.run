
###############################################################################################################################
## bg_json.sh:Object_toJSON:all start
## expect: 

##----------
## setup
##     | cmd> local -n foo; ConstructObject TestClass foo

##----------
## test
cmd> $foo.toJSON "$1"
{
   "_CLASS": "TestClass",
   "_OID": "sessionOID_0",
   "memberOne": " this and that",
   "memberTwo": "14",
   "numbers": {
      "_CLASS": "Map",
      "_OID": "sessionOID_1",
      "obj": {
         "_CLASS": "Object",
         "_OID": "sessionOID_2"
      },
      "one": "1",
      "two": "2",
      "zero": "0"
   },
   "pmemA": "hello",
   "pmemB": "5",
   "words": [
      "zero",
      "one",
      "two",
      {
         "_CLASS": "Object",
         "_OID": "sessionOID_4"
      }
   ]
}

## bg_json.sh:Object_toJSON:all finished
###############################################################################################################################


###############################################################################################################################
## bg_json.sh:Object_toJSON:real start
## expect: 

##----------
## setup
##     | cmd> local -n foo; ConstructObject TestClass foo

##----------
## test
cmd> $foo.toJSON "$1"
{
   "memberOne": " this and that",
   "memberTwo": "14",
   "numbers": {
      "obj": {},
      "one": "1",
      "two": "2",
      "zero": "0"
   },
   "pmemA": "hello",
   "pmemB": "5",
   "words": [
      "zero",
      "one",
      "two",
      {}
   ]
}

## bg_json.sh:Object_toJSON:real finished
###############################################################################################################################


###############################################################################################################################
## bg_json.sh:ConstructObjectFromJson:plain start
## expect: 

##----------
## setup
##     | cmd> local jsonFile; bgmktemp --auto jsonFile
##     | cmd> echo "$1" > "$jsonFile"
##     | cmd> cat "$jsonFile"
##     | {
##     |    "pmemB": "5",
##     |    "pmemA": "hello",
##     |    "memberTwo": "14",
##     |    "memberOne": " this and that",
##     |    "words": [
##     |       "zero",
##     |       "one",
##     |       "two",
##     |       {}
##     |    ]
##     |    "numbers": {
##     |       "two": "2",
##     |       "obj": {}
##     |       "zero": "0",
##     |       "one": "1"
##     |    }
##     | }

##----------
## test
cmd> local obj; ConstructObjectFromJson obj "$jsonFile"
cmd> printfVars  obj
obj= <instance> of Object
  memberOne= this and that
  memberTwo=14
  numbers= <instance> of Object
    obj= <instance> of Object
    one =1
    two =2
    zero=0
  pmemA    =hello
  pmemB    =5
  words= <instance> of Array
    [0]=zero
    [1]=one
    [2]=two
    [3]= <instance> of Object

## bg_json.sh:ConstructObjectFromJson:plain finished
###############################################################################################################################


###############################################################################################################################
## bg_json.sh:ConstructObjectFromJson:withSys start
## expect: 

##----------
## setup
##     | cmd> local jsonFile; bgmktemp --auto jsonFile
##     | cmd> echo "$1" > "$jsonFile"
##     | cmd> cat "$jsonFile"
##     | {
##     |    "pmemB": "5",
##     |    "pmemA": "hello",
##     |    "memberTwo": "14",
##     |    "memberOne": " this and that",
##     |    "words": [
##     |       "zero",
##     |       "one",
##     |       "two",
##     |       {
##     |          "_CLASS": "Object",
##     |          "_OID": "sessionOID_2"
##     |       }
##     |    ],
##     |    "numbers": {
##     |       "two": "2",
##     |       "obj": {
##     |          "_CLASS": "Object",
##     |          "_OID": "sessionOID_4"
##     |       },
##     |       "zero": "0",
##     |       "one": "1",
##     |       "_CLASS": "Map",
##     |       "_OID": "sessionOID_3"
##     |    },
##     |    "_CLASS": "TestClass",
##     |    "_OID": "sessionOID_0"
##     | }

##----------
## test
cmd> local obj; ConstructObjectFromJson obj "$jsonFile"
cmd> printfVars  obj
obj= <instance> of TestClass
  memberOne= this and that
  memberTwo=14
  numbers= <instance> of Map
    obj= <instance> of Object
    one =1
    two =2
    zero=0
  pmemA    =hello
  pmemB    =5
  words= <instance> of Array
    [0]=zero
    [1]=one
    [2]=two
    [3]= <instance> of Object

## bg_json.sh:ConstructObjectFromJson:withSys finished
###############################################################################################################################


###############################################################################################################################
## bg_json.sh:jsonEscape:100 start
## expect: 

##----------
## setup
##     | cmd> local val="$1"
##     | cmd> local valEsc="$2"
##     | cmd> local test1 test2

##----------
## test
input         :"hello"
input escaped :\"hello\"

escaped       :\"hello\"                      CORRECT
unescaped     :"hello"                        CORRECT

## bg_json.sh:jsonEscape:100 finished
###############################################################################################################################


###############################################################################################################################
## bg_json.sh:jsonEscape:110 start
## expect: 

##----------
## setup
##     | cmd> local val="$1"
##     | cmd> local valEsc="$2"
##     | cmd> local test1 test2

##----------
## test
input         :path/file.data
input escaped :path\/file.data

escaped       :path\/file.data                CORRECT
unescaped     :path/file.data                 CORRECT

## bg_json.sh:jsonEscape:110 finished
###############################################################################################################################


###############################################################################################################################
## bg_json.sh:jsonEscape:120 start
## expect: 

##----------
## setup
##     | cmd> local val="$1"
##     | cmd> local valEsc="$2"
##     | cmd> local test1 test2

##----------
## test
input         :
	
input escaped :\b\n\f\r\t

escaped       :\b\n\f\r\t                     CORRECT
unescaped     :
	                          CORRECT

## bg_json.sh:jsonEscape:120 finished
###############################################################################################################################

