
###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfEmptyOp0 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .foo'
_chainedObjOrMember='.foo'
_memberOp=''
_argsV[]
_hierarchLevel='0'
_memberExpression='.foo'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='null:either'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfEmptyOp0 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfEmptyOp1 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .bar.foo'
_chainedObjOrMember='.bar.foo'
_memberOp=''
_argsV[]
_hierarchLevel='0'
_memberExpression='.bar.foo'
_rsvOID='heap_A_<redacted>'
_OID='heap_A_<redacted>'
_OID_sys='heap_A_<redacted>_sys'
_CLASS='Object'
_rsvMemberType='null:either'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfEmptyOp1 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfEmptyOp2 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .foo p1'
_chainedObjOrMember='.foo'
_memberOp=''
_argsV[]
      [0]='p1'
_hierarchLevel='0'
_memberExpression='.foo p1'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='null:method'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfEmptyOp2 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfEmptyOp3 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .bar.foo p1'
_chainedObjOrMember='.bar.foo'
_memberOp=''
_argsV[]
      [0]='p1'
_hierarchLevel='0'
_memberExpression='.bar.foo p1'
_rsvOID='heap_A_<redacted>'
_OID='heap_A_<redacted>'
_OID_sys='heap_A_<redacted>_sys'
_CLASS='Object'
_rsvMemberType='null:method'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfEmptyOp3 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfUnsetOp0 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .unset'
_chainedObjOrMember=''
_memberOp='.unset'
_argsV[]
_hierarchLevel='0'
_memberExpression='.unset'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='self'
_rsvMemberName=''

## bg_objects.sh:_parseObjSyntax:pOfUnsetOp0 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfUnsetOp1 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .foo.unset'
_chainedObjOrMember='.foo'
_memberOp='.unset'
_argsV[]
_hierarchLevel='0'
_memberExpression='.foo.unset'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='null:either'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfUnsetOp1 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfUnsetOp2 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .unset p1'
_chainedObjOrMember=''
_memberOp='.unset'
_argsV[]
      [0]='p1'
_hierarchLevel='0'
_memberExpression='.unset p1'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='self'
_rsvMemberName=''

## bg_objects.sh:_parseObjSyntax:pOfUnsetOp2 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfUnsetOp3 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .foo.unset p1'
_chainedObjOrMember='.foo'
_memberOp='.unset'
_argsV[]
      [0]='p1'
_hierarchLevel='0'
_memberExpression='.foo.unset p1'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='null:either'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfUnsetOp3 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfNewOp0 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | =new'
_chainedObjOrMember=''
_memberOp='=new'
_argsV[]
_hierarchLevel='0'
_memberExpression='=new'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='self'
_rsvMemberName=''

## bg_objects.sh:_parseObjSyntax:pOfNewOp0 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfNewOp1 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .foo=new'
_chainedObjOrMember='.foo'
_memberOp='=new'
_argsV[]
_hierarchLevel='0'
_memberExpression='.foo=new'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='null:either'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfNewOp1 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfNewOp2 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | =new p1'
_chainedObjOrMember=''
_memberOp='=new'
_argsV[]
      [0]='p1'
_hierarchLevel='0'
_memberExpression='=new p1'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='self'
_rsvMemberName=''

## bg_objects.sh:_parseObjSyntax:pOfNewOp2 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfNewOp3 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .foo=new p1'
_chainedObjOrMember='.foo'
_memberOp='=new'
_argsV[]
      [0]='p1'
_hierarchLevel='0'
_memberExpression='.foo=new p1'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='null:either'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfNewOp3 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfAssignOp0 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | ='
_chainedObjOrMember=''
_memberOp='='
_argsV[]
_hierarchLevel='0'
_memberExpression='='
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='self'
_rsvMemberName=''

## bg_objects.sh:_parseObjSyntax:pOfAssignOp0 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfAssignOp1 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .foo='
_chainedObjOrMember='.foo'
_memberOp='='
_argsV[]
_hierarchLevel='0'
_memberExpression='.foo='
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='null:either'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfAssignOp1 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfAssignOp2 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | = p1'
_chainedObjOrMember=''
_memberOp='='
_argsV[]
      [0]=' p1'
_hierarchLevel='0'
_memberExpression='= p1'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='self'
_rsvMemberName=''

## bg_objects.sh:_parseObjSyntax:pOfAssignOp2 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfAssignOp3 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | =p1'
_chainedObjOrMember=''
_memberOp='='
_argsV[]
      [0]='p1'
_hierarchLevel='0'
_memberExpression='=p1'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='self'
_rsvMemberName=''

## bg_objects.sh:_parseObjSyntax:pOfAssignOp3 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfAssignOp4 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .foo= p1'
_chainedObjOrMember='.foo'
_memberOp='='
_argsV[]
      [0]=' p1'
_hierarchLevel='0'
_memberExpression='.foo= p1'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='null:either'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfAssignOp4 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfAssignOp5 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .foo=p1'
_chainedObjOrMember='.foo'
_memberOp='='
_argsV[]
      [0]='p1'
_hierarchLevel='0'
_memberExpression='.foo=p1'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='null:either'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pOfAssignOp5 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfStatic0 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'Object Object 0 | ::assign'
_chainedObjOrMember=''
_memberOp='::'
_argsV[]
      [0]='assign'
_hierarchLevel='0'
_memberExpression='::assign'
_rsvOID='Object'
_OID='Object'
_OID_sys='Object'
_CLASS='Class'
_rsvMemberType='self'
_rsvMemberName=''

## bg_objects.sh:_parseObjSyntax:pOfStatic0 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pOfStatic1 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .static.toString'
_chainedObjOrMember='.static'
_memberOp='.toString'
_argsV[]
_hierarchLevel='0'
_memberExpression='.static.toString'
_rsvOID='Object'
_OID='Object'
_OID_sys='Object'
_CLASS='Class'
_rsvMemberType='self'
_rsvMemberName=''

## bg_objects.sh:_parseObjSyntax:pOfStatic1 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pMemVarSyntax1 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | [foo]'
_chainedObjOrMember='[foo]'
_memberOp=''
_argsV[]
_hierarchLevel='0'
_memberExpression='[foo]'
_rsvOID='myoid'
_OID='myoid'
_OID_sys='myoid'
_CLASS='Object'
_rsvMemberType='null:memberVar'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pMemVarSyntax1 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_parseObjSyntax:pMemVarSyntax2 start
## expect: 

##----------
## setup
##     | cmd> local _OID _CLASS _hierarchLevel _memberExpression _chainedObjOrMember _memberOp _argsV  _rsvOID _rsvMemberType _rsvMemberName
##     | cmd> local _OID _OID_sys
##     | cmd> local -n this _this static
##     | cmd> local -A myoid; ConstructObject Object myoid

##----------
## test
'myoid Object 0 | .bar[foo]'
_chainedObjOrMember='.bar[foo]'
_memberOp=''
_argsV[]
_hierarchLevel='0'
_memberExpression='.bar[foo]'
_rsvOID='heap_A_<redacted>'
_OID='heap_A_<redacted>'
_OID_sys='heap_A_<redacted>_sys'
_CLASS='Object'
_rsvMemberType='null:memberVar'
_rsvMemberName='foo'

## bg_objects.sh:_parseObjSyntax:pMemVarSyntax2 finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:initialState: start
## expect:  shows the classes that are initially created and their content

##----------
## setup
##     | ut filter '([[]vmtCacheNum[[:space:]]*[]]=).[0-9]*.###\1<redacted>'

##----------
## test
cmd> ./unitTests/bg_objectsInitialStateTest.sh
Object Class NullObject Stack Array Map
#
#
#------------------ Object --------------------
global array vars: Object Object_vmt
Object[]
      [baseClass     ]=''
      [_CLASS        ]='Class'
      [0             ]=' <objRef to 'Object'>'
      [_Ref          ]=' <objRef to 'Object'>'
      [classHierarchy]='Object'
      [vmtCacheNum   ]=<redacted>
      [methods       ]='Object::addMethod
                       +Object::bgtrace
                       +Object::clear
                       +Object::clone
                       +Object::eval
                       +Object::fromDebControl
                       +Object::fromFlatINI
                       +Object::fromINI
                       +Object::fromString
                       +Object::get
                       +Object::getAttributes
                       +Object::getIndexes
                       +Object::getMethods
                       +Object::getSize
                       +Object::getStaticMethods
                       +Object::getValues
                       +Object::hasMethod
                       +Object::restoreFile
                       +Object::saveFile
                       +Object::set
                       +Object::toDebControl
                       +Object::toFlatINI
                       +Object::toString'
      [subClasses    ]='Class NullObject Stack Array Map'
      [staticMethods ]='static::Object::assign'
      [name          ]='Object'
      [_OID          ]='Object'
#
Object_vmt[]
          [_method::fromFlatINI     ]='Object::fromFlatINI'
          [_method::getValues       ]='Object::getValues'
          [_method::hasMethod       ]='Object::hasMethod'
          [_method::getAttributes   ]='Object::getAttributes'
          [_method::toFlatINI       ]='Object::toFlatINI'
          [_method::restoreFile     ]='Object::restoreFile'
          [_method::getSize         ]='Object::getSize'
          [_method::fromDebControl  ]='Object::fromDebControl'
          [_method::getMethods      ]='Object::getMethods'
          [_method::eval            ]='Object::eval'
          [_method::fromINI         ]='Object::fromINI'
          [_method::saveFile        ]='Object::saveFile'
          [_method::getIndexes      ]='Object::getIndexes'
          [_method::clone           ]='Object::clone'
          [_method::toString        ]='Object::toString'
          [_method::addMethod       ]='Object::addMethod'
          [_method::toDebControl    ]='Object::toDebControl'
          [_method::fromString      ]='Object::fromString'
          [_method::set             ]='Object::set'
          [_method::bgtrace         ]='Object::bgtrace'
          [_static::assign          ]='static::Object::assign'
          [_method::get             ]='Object::get'
          [_method::clear           ]='Object::clear'
          [_method::getStaticMethods]='Object::getStaticMethods'

#
#
#------------------ Class --------------------
global array vars: Class Class_vmt
Class[]
     [baseClass        ]='Object'
     [_CLASS           ]='Class'
     [0                ]=' <objRef to 'Class'>'
     [_Ref             ]=' <objRef to 'Class'>'
     [pendingClassCtors]=''
     [classHierarchy   ]='Object Class'
     [vmtCacheNum      ]=<redacted>
     [methods          ]='Class::__construct
                         +Class::getClassMethods
                         +Class::getClassStaticMethods
                         +Class::isDerivedFrom
                         +Class::reloadMethods'
     [staticMethods    ]='static::Class::assertClassExists
                         +static::Class::setClass'
     [name             ]='Class'
     [_OID             ]='Class'
#
Class_vmt[]
         [_method::fromFlatINI        ]='Object::fromFlatINI'
         [_method::getValues          ]='Object::getValues'
         [_method::getAttributes      ]='Object::getAttributes'
         [_method::hasMethod          ]='Object::hasMethod'
         [_method::toFlatINI          ]='Object::toFlatINI'
         [_static::setClass           ]='static::Class::setClass'
         [_method::restoreFile        ]='Object::restoreFile'
         [_method::getClassMethods    ]='Class::getClassMethods'
         [_method::getSize            ]='Object::getSize'
         [_method::__construct        ]='Class::__construct'
         [_method::fromDebControl     ]='Object::fromDebControl'
         [_method::eval               ]='Object::eval'
         [_method::getMethods         ]='Object::getMethods'
         [_method::fromINI            ]='Object::fromINI'
         [_method::saveFile           ]='Object::saveFile'
         [_method::getIndexes         ]='Object::getIndexes'
         [_method::clone              ]='Object::clone'
         [_method::addMethod          ]='Object::addMethod'
         [_method::toString           ]='Object::toString'
         [_method::toDebControl       ]='Object::toDebControl'
         [_static::assertClassExists  ]='static::Class::assertClassExists'
         [_method::fromString         ]='Object::fromString'
         [_method::bgtrace            ]='Object::bgtrace'
         [_method::set                ]='Object::set'
         [_method::get                ]='Object::get'
         [_static::assign             ]='static::Object::assign'
         [_method::getClassStaticMethods]='Class::getClassStaticMethods'
         [_method::reloadMethods      ]='Class::reloadMethods'
         [_method::isDerivedFrom      ]='Class::isDerivedFrom'
         [_method::clear              ]='Object::clear'
         [_method::getStaticMethods   ]='Object::getStaticMethods'

#
#
#------------------ NullObject --------------------
global array vars: NullObject NullObjectInstance
NullObject[]
          [baseClass     ]='Object'
          [_CLASS        ]='Class'
          [0             ]=' <objRef to 'NullObject'>'
          [_Ref          ]=' <objRef to 'NullObject'>'
          [classHierarchy]='Object NullObject'
          [name          ]='NullObject'
          [_OID          ]='NullObject'
#
NullObject_vmt[]
NullObjectInstance[]
                  [_CLASS]='NullObject'
                  [_Ref  ]='assertError Null Object reference called <NULL>'
                  [0     ]='assertError Null Object reference called <NULL>'
                  [_OID  ]='NullObjectInstance'
#
#
#------------------ Stack --------------------
global array vars: Stack
Stack[]
     [baseClass     ]='Object'
     [_CLASS        ]='Class'
     [0             ]=' <objRef to 'Stack'>'
     [_Ref          ]=' <objRef to 'Stack'>'
     [classHierarchy]='Object Stack'
     [name          ]='Stack'
     [_OID          ]='Stack'
#
Stack_vmt[]

#
#
#------------------ Array --------------------
global array vars: Array
Array[]
     [baseClass     ]='Object'
     [_CLASS        ]='Class'
     [0             ]=' <objRef to 'Array'>'
     [_Ref          ]=' <objRef to 'Array'>'
     [oidAttributes ]='a'
     [classHierarchy]='Object Array'
     [defaultIndex  ]='off'
     [name          ]='Array'
     [_OID          ]='Array'
#
Array_vmt[]

#
#
#------------------ Map --------------------
global array vars: Map
Map[]
   [baseClass     ]='Object'
   [_CLASS        ]='Class'
   [0             ]=' <objRef to 'Map'>'
   [_Ref          ]=' <objRef to 'Map'>'
   [classHierarchy]='Object Map'
   [defaultIndex  ]='off'
   [name          ]='Map'
   [_OID          ]='Map'
#
Map_vmt[]


## bg_objects.sh:initialState: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:methodCall: start
## expect: 

##----------
## setup
##     | cmd> DeclareClass Animal
##     | cmd> local animal; ConstructObject Animal animal

##----------
## test
cmd> $animal.speak
the animal says...

## bg_objects.sh:methodCall: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:isDerivedFrom: start
## expect:  that true tests indicate true and false tests indicate false

##----------
## setup
##     | cmd> DeclareClass Animal
##     | cmd> DeclareClass -f Dog : Animal

##----------
## test

# expect these to be true
cmd> $Dog.isDerivedFrom "Animal"       && echo yes || echo no
yes
cmd> $Animal.isDerivedFrom "Animal"    && echo yes || echo no
yes
cmd> $Dog.isDerivedFrom "Object"       && echo yes || echo no
yes
cmd> echo


# expect these to be false
cmd> $Animal.isDerivedFrom "Dog"       && echo yes || echo no
no
cmd> $Animal.isDerivedFrom "Dog" # to document the return code
[exitCode 1]
cmd> $Animal.isDerivedFrom "Car"       && echo yes || echo no
no

## bg_objects.sh:isDerivedFrom: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:getClassMethods: start
## expect:  the correct set of methods to be printed to stdout. -i includes inherited, -d changes the delimiter between methods

##----------
## setup
##     | cmd> DeclareClass -f Animal

##----------
## test
cmd> $Animal.getClassMethods
speak feed pet
cmd> $Animal.getClassMethods -i
get speak hasMethod fromINI toJSON addMethod getAttributes toDebControl fromFlatINI restoreFile clear fromString bgtrace getStaticMethods fromDebControl toString set eval toFlatINI getValues getSize fromJSON getMethods saveFile feed getIndexes clone pet
cmd> $Animal.getClassMethods -d$'\n'
speak
feed
pet

## bg_objects.sh:getClassMethods: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:ConstructObject: start
## expect:  the state after constructing a object 3 different ways is all consistent with each other

##----------
## setup
##     | cmd> DeclareClass Animal

##----------
## test
cmd> local pet; ConstructObject Animal pet
cmd> local petOID="$(GetOID "$pet" -)"
cmd> eval 'local petOIDVars="${!'"$petOID"'*}"'
cmd> echo "global vars for this object = ${petOIDVars}"
global vars for this object = heap_A_<redacted> heap_A_<redacted>_sys
cmd> printfVars --noObjects pet $petOIDVars
pet[]
   [0       ]=' <objRef to 'pet'>'
   [legCount]='unk'
   [species ]='unk'
   [family  ]='unk'
[heap_A_<redacted>]='<supressing repeated array 'pet'>'
heap_A_<redacted>_sys[]
                     [_CLASS]='Animal'
                     [0     ]=' <objRef to 'pet'>'
                     [_Ref  ]=' <objRef to 'pet'>'
                     [_OID  ]='<array reference to 'pet'>'

##----------
## test
cmd> local -A pet2; ConstructObject Animal pet2
cmd> local pet2OID="$(GetOID "$pet2" -)"
cmd> eval 'local pet2OIDVars="${!'"$pet2OID"'*}"'
cmd> echo "vars for this object = ${pet2OIDVars}"
vars for this object = pet2 pet2OID
cmd> printfVars --noObjects $pet2OIDVars
pet2[]
    [_CLASS  ]='Animal'
    [0       ]=' <objRef to 'pet2'>'
    [_Ref    ]=' <objRef to 'pet2'>'
    [legCount]='unk'
    [species ]='unk'
    [family  ]='unk'
    [_OID    ]='pet2'
pet2OID='pet2'

##----------
## test
cmd> local -n pet3; ConstructObject Animal pet3
cmd> local pet3OID="$(GetOID "$pet3" -)"
cmd> eval 'local pet3OIDVars="${!'"$pet3OID"'*}"'
cmd> echo "global vars for this object = ${pet3OIDVars}"
global vars for this object = heap_A_<redacted> heap_A_<redacted>_sys
cmd> printfVars --noObjects pet3 $pet3OIDVars
pet3[]
    [0       ]=' <objRef to 'pet3'>'
    [legCount]='unk'
    [species ]='unk'
    [family  ]='unk'
[heap_A_<redacted>]='<supressing repeated array 'pet3'>'
heap_A_<redacted>_sys[]
                     [_CLASS]='Animal'
                     [0     ]=' <objRef to 'pet3'>'
                     [_Ref  ]=' <objRef to 'pet3'>'
                     [_OID  ]='<array reference to 'pet3'>'

## bg_objects.sh:ConstructObject: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:_classUpdateVMT: start
## expect: 

##----------
## setup
##     | cmd> DeclareClass -f Animal
##     | cmd> $Animal.getClassMethods
##     | speak

##----------
## test
cmd> Animal::pet() { echo "that's nice"; }; true
cmd> Animal::feed() { echo "now that's more like it!"; }; true

# expect that pet and feed are not in this list
cmd> echo "${Animal[methods]}"
Animal::speak
cmd> _classUpdateVMT -f "Animal"

# expect that now pet and feed are in this list
cmd> echo "${Animal[methods]}"
Animal::feed
Animal::pet
Animal::speak

## bg_objects.sh:_classUpdateVMT: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Array: start
## expect: 

##----------
## test
cmd> local -n a1; ConstructObject Array a1
cmd> printfVars a1
a1[]
cmd> a1=(one two three)
cmd> printfVars a1
a1[]
  [0]='one'
  [1]='two'
  [2]='three'

##----------
## test
cmd> local a2; ConstructObject Array a2
cmd> $a2.getOID
heap_a_<redacted>
cmd> local -n a2OID; $a2.getOID a2OID
cmd> printfVars a2
a2= <instance> of Array
cmd> a2OID=(one two three)
cmd> printfVars a2
a2= <instance> of Array
  [0]=one
  [1]=two
  [2]=three
cmd> $a2.getSize
3

## bg_objects.sh:Array: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Map: start
## expect: 

##----------
## test
cmd> local -n a1; ConstructObject Map a1
cmd> printfVars a1
a1[]
cmd> a1=([one]=1 [two]=2 [three]=3)
cmd> printfVars a1
a1[]
  [two  ]='2'
  [three]='3'
  [one  ]='1'

##----------
## test
cmd> local a2; ConstructObject Map a2
cmd> $a2.getOID
heap_A_<redacted>
cmd> printfVars --noObjects "$($a2.getOID)"{,_sys}
heap_A_<redacted>[]
heap_A_<redacted>_sys[]
                     [_CLASS]='Map'
                     [0     ]=' <objRef to 'heap_A_<redacted>'>'
                     [_Ref  ]=' <objRef to 'heap_A_<redacted>'>'
                     [_OID  ]='<array reference to 'heap_A_<redacted>'>'
cmd> local -n a2OID; $a2.getOID a2OID
cmd> printfVars a2
a2= <instance> of Map
cmd> a2OID=([one]=1 [two]=2 [three]=3)
cmd> $a2.getIndexes
two
three
one
cmd> printfVars a2
a2= <instance> of Map
  two  =2
  three=3
  one  =1
cmd> printfVars --noObjects "$($a2.getOID)"{,_sys}
heap_A_<redacted>[]
                 [two  ]='2'
                 [three]='3'
                 [one  ]='1'
heap_A_<redacted>_sys[]
                     [_CLASS]='Map'
                     [0     ]=' <objRef to 'heap_A_<redacted>'>'
                     [_Ref  ]=' <objRef to 'heap_A_<redacted>'>'
                     [_OID  ]='<array reference to 'heap_A_<redacted>'>'
cmd> $a2.getSize
3

## bg_objects.sh:Map: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Stack: start
## expect: 

##----------
## test
cmd> local -n a1; ConstructObject Stack a1
cmd> printfVars a1
a1= <instance> of Stack
  length=0
cmd> $a1.push one
cmd> $a1.push two
cmd> $a1.push three
cmd> $a1.getSize
3
cmd> printfVars a1
a1= <instance> of Stack
  length=3
  e2    =three
  e0    =one
  e1    =two
cmd> for ((i=0; i<$($a1.getSize); i++)); do $a1.peek $i; done
three
two
one
cmd> local element
cmd> while $a1.pop element; do printfVars element; done
element='three'
element='two'
element='one'

##----------
## test
cmd> local a2; ConstructObject Stack a2
cmd> printfVars a2
a2= <instance> of Stack
  length=0
cmd> $a2.push one
cmd> $a2.push two
cmd> $a2.push three
cmd> $a2.getSize
3
cmd> printfVars a2
a2= <instance> of Stack
  length=3
  e2    =three
  e0    =one
  e1    =two
cmd> for ((i=0; i<$($a2.getSize); i++)); do $a2.peek $i; done
three
two
one
cmd> local element
cmd> while $a2.pop element; do printfVars element; done
element='three'
element='two'
element='one'

## bg_objects.sh:Stack: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:nestedObjects: start
## expect:  the DataFile::read() method refer to "filename" and "data" directly without using the array notation this[filename]

##----------
## setup
##     | cmd> DeclareClass DataFile
##     | cmd> local tmpFile; bgmktemp --auto tmpFile
##     | cmd> ')" | tee "$tmpFile"
##     | one fish
##     | two fish
##     | red fish
##     | blue fish

##----------
## test
cmd> local  datafile; ConstructObject DataFile datafile "$tmpFile"
declare -n _someSysArray="heap_a_<redacted>"
cmd> printfVars datafile
datafile= <instance> of DataFile
  filename=/tmp/bgmktemp.tmpFile.<redacted>
  data= <instance> of Array
    [0]=one fish
    [1]=two fish
    [2]=red fish
    [3]=blue fish

## bg_objects.sh:nestedObjects: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_unset: start
## expect: 

##----------
## setup
##     | cmd> local -n obj; ConstructObject Object obj

##----------
## test
cmd> obj[foo]="hello"

# expect that foo is present
cmd> printfVars obj
obj= <instance> of Object
  foo=hello
cmd> $obj.foo.unset

# expect that foo is not present
cmd> printfVars obj
obj= <instance> of Object

## bg_objects.sh:Object_unset: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_exists: start
## expect: 

##----------
## setup
##     | cmd> local -n obj; ConstructObject Object obj

##----------
## test

# expect that foo does not exist
cmd> $obj.foo.exists && echo true || echo false
false
cmd> obj[foo]="hello"

# expect that foo exists now
cmd> $obj.foo.exists && echo true || echo false
true

## bg_objects.sh:Object_exists: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_isA: start
## expect: 

##----------
## setup
##     | cmd> local -n obj; ConstructObject Object obj

##----------
## test

# expect that only isA object will be true
cmd> $obj.isA Object && echo true || echo false
true
cmd> $obj.isA Array  && echo true || echo false
false
cmd> $obj.isA Foo    && echo true || echo false
false

## bg_objects.sh:Object_isA: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_getType: start
## expect: 

##----------
## setup
##     | cmd> local -n obj; ConstructObject Object obj
##     | cmd> $obj.foo=5
##     | cmd> $obj.array=new Array

##----------
## test
cmd> $obj.getType
Object
cmd> local type; $obj.getType type; printfVars type
type='Object'
cmd> $obj.foo.getType
primitive
cmd> $obj.array.getType
Array
cmd> $obj.getIndexes.getType
method
cmd> $obj.dontExist.getType
null

## bg_objects.sh:Object_getType: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_getOID: start
## expect: 

##----------
## setup
##     | ut filter 'heap_([^_<redacted>_([^_ ]*)###heap_\1_<redacted>
##     | cmd> local -n obj; ConstructObject Object obj
##     | cmd> $obj.foo=5
##     | cmd> $obj.array=new Array

##----------
## test
cmd> $obj.getOID
heap_A_<redacted>
cmd> local type; $obj.getOID type; printfVars type
type='heap_A_<redacted>
type[]
    [foo  ]='5'
    [0    ]=' <objRef to 'type'>'
    [array][]
cmd> $obj.foo.getOID
[exitCode 1]
cmd> $obj.array.getOID
heap_a_<redacted>
cmd> $obj.getIndexes.getOID
[exitCode 1]
cmd> $obj.dontExist.getOID
[exitCode 1]

## bg_objects.sh:Object_getOID: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_getRef: start
## expect: 

##----------
## setup
##     | ut filter 'heap_([^_<redacted>_([^_ ]*)###heap_\1_<redacted>
##     | cmd> local -n obj; ConstructObject Object obj
##     | cmd> $obj.foo=5
##     | cmd> $obj.array=new Array

##----------
## test
cmd> $obj.getRef
_bgclassCall heap_A_<redacted> Object 0 | 
cmd> local type; $obj.getRef type; printfVars --noObjects type
type[]
    [foo  ]='5'
    [0    ]=' <objRef to 'type'>'
    [array][]
cmd> $obj.foo.getRef
[exitCode 1]
cmd> $obj.array.getRef
_bgclassCall heap_a_<redacted> Array 0 | 
cmd> $obj.getIndexes.getRef
[exitCode 1]
cmd> $obj.dontExist.getRef
[exitCode 1]

## bg_objects.sh:Object_getRef: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_toString: start
## expect: 

##----------
## setup
##     | cmd> local -n obj; ConstructObject Object obj
##     | cmd> $obj.foo=5
##     | cmd> $obj.array=new Array

##----------
## test
cmd> $obj.toString
foo=5
array= <instance> of Array
cmd> $obj.foo.toString
5
cmd> $obj.foo.toString --title
foo=5
cmd> $obj.foo.toString --title=
foo=5
cmd> $obj.foo.toString --title=foo
foo=5
cmd> $obj.foo.toString --title=DifferentLable
DifferentLable=5
cmd> $obj.array.toString
cmd> $obj.array.toString --title
cmd> $obj.array[0]="hiya"
cmd> $obj.array.toString
[0]=hiya
cmd> $obj.getIndexes.toString
method<Object::getIndexes()>
cmd> $obj.getIndexes.toString
method<Object::getIndexes()>
cmd> $obj.dontExist.toString --title
dontExist=null
cmd> $obj.dontExist.toString
null
cmd> $obj[dontExist].toString
null:memberVar
cmd> $obj.::dontExist.toString
** Exception thrown by testcase **
   catch_errorClass='assertObjExpressionError'
   catch_errorFn='ut_Object_toString'
   catch_errorCode='36'
   catch_errorDescription='
                          +error: ut_Object_toString: The class 'Object' does not contain a static method 'dontExist.toString'
                          +    objectExpression='$obj.::dontExist.toString'
                          +    class='Object'
                          +    staticMethod='dontExist.toString''
## bg_objects.sh:Object_toString: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_assignNewOp: start
## expect: 

##----------
## setup
##     | cmd> local -n obj; ConstructObject Object obj

##----------
## test
cmd> $obj.foo=new Array
cmd> printfVars obj
obj= <instance> of Object
  foo= <instance> of Array

## bg_objects.sh:Object_assignNewOp: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_staticCallSyntax: start
## expect: 

##----------
## setup
##     | ut filter '^(subClasses[[:space:]]*=).*$###\1<redacted>'
##     | cmd> local -n obj; ConstructObject Object obj

##----------
## test

# expect that the Object class object is printed
cmd> $obj.static.toString
baseClass     =
classHierarchy=Object
vmtCacheNum   =<redacted>
methods       =Object::addMethod
+ Object::bgtrace
+ Object::clear
+ Object::clone
+ Object::eval
+ Object::fromDebControl
+ Object::fromFlatINI
+ Object::fromINI
+ Object::fromJSON
+ Object::fromString
+ Object::get
+ Object::getAttributes
+ Object::getIndexes
+ Object::getMethods
+ Object::getSize
+ Object::getStaticMethods
+ Object::getValues
+ Object::hasMethod
+ Object::restoreFile
+ Object::saveFile
+ Object::set
+ Object::toDebControl
+ Object::toFlatINI
+ Object::toJSON
+ Object::toString
subClasses    =<redacted>
staticMethods =static::Object::assign
name          =Object

## bg_objects.sh:Object_staticCallSyntax: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_chainCallSyntax: start
## expect: 

##----------
## setup
##     | cmd> local -n obj; ConstructObject Object obj
##     | cmd> $obj.foo=new Map
##     | cmd> $obj.foo[bar]="hello world"

##----------
## test

# expect that foo member's toString method is called
cmd> $obj.foo.toString
bar=hello world

# expect that object members can be created on demand
cmd> $obj.foo[one].two="yoyo"
cmd> printfVars obj
obj= <instance> of Object
  foo= <instance> of Map
    bar=hello world
    one= <instance> of Object
      two=yoyo

## bg_objects.sh:Object_chainCallSyntax: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_equalsOp: start
## expect: 

##----------
## setup
##     | cmd> local -n obj; ConstructObject Object obj
##     | cmd> $obj.num=5
##     | cmd> $obj.str="hello"

##----------
## test

# expect that the new values are appended. This documents whether num is appended as a string or added
cmd> $obj.num+=10
cmd> $obj.str+=" world"
cmd> $obj.toString
str=hello world
num=510

# expect equal to replace the previous value
cmd> $obj.num=10
cmd> $obj.str="goodbye"
cmd> $obj.toString
str=goodbye
num=10

## bg_objects.sh:Object_equalsOp: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_virtualCallSyntax: start
## expect: 

##----------
## setup
##     | cmd> DeclareClass Base
##     | cmd> DeclareClass Derived : Base
##     | cmd> local -n obj; ConstructObject Derived obj

##----------
## test

# expect normal polymorphism -- to see only msg from Derived::two
cmd> $obj.two
Derived::two

# expect explicit call -- to see only msg from Base::two
cmd> $obj.Base::two
Base::two

# expect polymorphism with super -- to see msg from Derived::one and then from Base:one
cmd> $obj.one
Derived::one
Base::one

## bg_objects.sh:Object_virtualCallSyntax: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:Object_memberVarReadAccess: start
## expect: 

##----------
## setup
##     | cmd> local -n obj; ConstructObject Object obj
##     | cmd> $obj.foo="hello world"

##----------
## test

# expect to see what happens when we reference an attribute that exists with no operator
cmd> $obj.foo
hello world
cmd> $obj[foo]
hello world

# expect that all of these syntax will be interpreted as a missing member var when it does not exist
cmd> $obj[bar]
[exitCode 1]
cmd> $obj[doit] p1 # this would look like a method call except the [] means that doit has to be a member var
[exitCode 1]

# expect that these two syntax will be interpreted as a missing method when it does not exist
cmd> Try:
cmd> $obj.::doit
** caught expected exception
   catch_errorClass='assertObjExpressionError'
   catch_errorFn='ut_Object_memberVarReadAccess'
   catch_errorCode='36'
   catch_errorDescription='
                          +error: ut_Object_memberVarReadAccess: The class 'Object' does not contain a static method 'doit'
                          +    objectExpression='$obj.::doit'
                          +    class='Object'
                          +    staticMethod='doit''
** caught expected exception
   catch_errorClass='assertObjExpressionError'
   catch_errorFn='ut_Object_memberVarReadAccess'
   catch_errorCode='36'
   catch_errorDescription='
                          +error: ut_Object_memberVarReadAccess: object method not found 'doit'
                          +    objectExpression='$obj.doit p1 p2 p3'
                          +    class='Object'
                          +    methodName='doit'
                          +    objectExpression='.doit p1 p2 p3''

## bg_objects.sh:Object_memberVarReadAccess: finished
###############################################################################################################################


###############################################################################################################################
## bg_objects.sh:expressionErrors: start
## expect: 

##----------
## setup
##     | cmd> ConstructObject Object obj

##----------
## test
cmd> $obj.:foo
** Exception thrown by testcase **
   catch_errorClass='assertObjExpressionError'
   catch_errorFn='ut_expressionErrors'
   catch_errorCode='36'
   catch_errorDescription='
                          +error: ut_expressionErrors: object method not found 'foo'
                          +    objectExpression='$obj.:foo'
                          +    class='Object'
                          +    methodName='foo'
                          +    objectExpression='.:foo''
## bg_objects.sh:expressionErrors: finished
###############################################################################################################################

