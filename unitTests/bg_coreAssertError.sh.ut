#!/usr/bin/env bg-utRunner


###################################################################################################
### Data

###################################################################################################
### Unit Tests

declare -A ut_frameOffsetOption=(
	[default]="$(cmdLine "")"
	[-1]="$(cmdLine "--frameOffset=-1")"
	[0]="$(cmdLine "--frameOffset=0")"
	[1]="$(cmdLine "--frameOffset=1")"
	[2]="$(cmdLine "--frameOffset=2")"
	[3]="$(cmdLine "--frameOffset=3")"
	[40]="$(cmdLine "--frameOffset=40")"
	[byName]="$(cmdLine "--frameOffset=^f.*")"
	[byNameOffset]="$(cmdLine "--frameOffset=f3:1")"
)
function ut_frameOffsetOption()
{
	ut setup
	eval 'function f1() { assertError '"$1"'; }'
	function f2() { f1; }          ; :
	function f3() { f2; }          ; :
	function f4() { f3; }          ; :
	type f1

	ut test
	ut expect "that catch_errorFn is the one identified by '${1:-<default>}' relative to assertError"
	f4
}

declare -A ut_errorClassFeature=(
	[0]="$(cmdLine "")"
	[1]="$(cmdLine "--frameOffset=1")"
	[2]="$(cmdLine "--frameOffset=2")"
	[40]="$(cmdLine "--frameOffset=40")"
)
function ut_errorClassFeature()
{
	ut setup
	eval 'function assertF1() { assertError '"$1"'; }'
	function f2() { assertF1; }          ; :
	function f3() { f2; }          ; :
	function f4() { f3; }          ; :
	type assertF1

	ut test
	ut expect "that the catch_errorClass is 'assertF1' because it starts with assert*"
	ut expect "that the catch_errorFn is now relative to 'assertF1' i.e. 'assertF1'+frameOffset"
	f4
}
