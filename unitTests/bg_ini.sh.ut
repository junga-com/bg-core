#!/bin/bash

source /usr/lib/bg_core.sh
import bg_unitTest.sh ;$L1;$L2
import bg_ini.sh      ;$L1;$L2


###################################################################################################
### Data

iniFileData_empty=''

iniFileData_noSections='
p1=foo
p2 = 3
p3.a = "hello world"

honey=good

'
iniFileData_noTopLevel='
[ sect1 ]
p1=foo
p2=3

[ sect2 ]
honey=good

[ sect14 ]
this=that
'

iniFileData_topAndSections='
p1=topFoo
p2=0

[ sect1 ]
p1=foo
p2=3

[ sect2 ]
honey=good
'

iniFileData_colonInSectNames='
p1=topFoo
p2=0

[ sect:1 ]
p1=foo
p2=3

[ sect:2 ]
honey=good

'

###################################################################################################
### Unit Tests

declare -A ut_getIniParam=(
	[empty]="$(cmdline "$iniFileData_empty")"
	[noSections]="$(cmdline "$iniFileData_noSections")"
	[noTopLevel]="$(cmdline "$iniFileData_noTopLevel")"
	[topAndSections]="$(cmdline "$iniFileData_topAndSections")"
	[colonInSectNames]="$(cmdline "$iniFileData_colonInSectNames")"
)
function ut_getIniParam()
{
	ut setup
	local iniFile="$(mktemp)"
	echo "$1" | tee "$iniFile"

	ut test
	getIniParam "$iniFile" '.' p1
	getIniParam "$iniFile" '.' p2
	getIniParam "$iniFile" '.' honey
	getIniParam "$iniFile" '.' noExist

	getIniParam "$iniFile" 'sect1' p1
	getIniParam "$iniFile" 'sect1' p2
	getIniParam "$iniFile" 'sect1' honey
	getIniParam "$iniFile" 'sect1' noExist

	getIniParam "$iniFile" 'sect2' p1
	getIniParam "$iniFile" 'sect2' p2
	getIniParam "$iniFile" 'sect2' honey
	getIniParam "$iniFile" 'sect2' noExist

	getIniParam "$iniFile" 'sect:1' p1
	getIniParam "$iniFile" 'sect:1' p2
	getIniParam "$iniFile" 'sect:1' honey
	getIniParam "$iniFile" 'sect:1' noExist
}


# ut_getIniSection_inputParams[1]="$iniFileData_empty"
# ut_getIniSection_inputParams[2]="$iniFileData_noSections"
# ut_getIniSection_inputParams[3]="$iniFileData_noTopLevel"
# ut_getIniSection_inputParams[4]="$iniFileData_topAndSections"
# ut_getIniSection_inputParams[5]="$iniFileData_colonInSectNames"
#
# function ut_getIniSection()
# {
# 	local iniFileData="$1"
#
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$iniFileData" | tee "$iniFile"
# 		#test
# 		getIniSection "$iniFile" '.'
# 		getIniSection "$iniFile" 'sect1'
# 		getIniSection "$iniFile" 'sect2'
# 		getIniSection "$iniFile" 'sect:1'
# 	'
#
# }
#
#
#
#
#
# ut_iniParamExists_inputParams[1]="$iniFileData_empty"
# ut_iniParamExists_inputParams[2]="$iniFileData_noSections"
# ut_iniParamExists_inputParams[3]="$iniFileData_noTopLevel"
# ut_iniParamExists_inputParams[4]="$iniFileData_topAndSections"
# ut_iniParamExists_inputParams[5]="$iniFileData_colonInSectNames"
#
# function ut_iniParamExists()
# {
# 	local iniFileData="$1"
#
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$iniFileData" | tee "$iniFile"
# 		#test
# 		iniParamExists    "$iniFile" '.' p1
# 		iniParamExists -v "$iniFile" '.' p1
#
# 		iniParamExists    "$iniFile" 'sect1' p1
# 		iniParamExists -v "$iniFile" 'sect1' p1
#
# 		iniParamExists    "$iniFile" 'sect:1' p1
# 		iniParamExists -v "$iniFile" 'sect:1' p1
# 	'
# }
#
#
#
#
# ut_iniSectionExists_inputParams[1]="$iniFileData_empty"
# ut_iniSectionExists_inputParams[2]="$iniFileData_noSections"
# ut_iniSectionExists_inputParams[3]="$iniFileData_noTopLevel"
# ut_iniSectionExists_inputParams[4]="$iniFileData_topAndSections"
# ut_iniSectionExists_inputParams[5]="$iniFileData_colonInSectNames"
#
# function ut_iniSectionExists()
# {
# 	local iniFileData="$1"
#
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$iniFileData" | tee "$iniFile"
# 		#test
# 		iniSectionExists    "$iniFile" '.'
#
# 		iniSectionExists    "$iniFile" 'sect'
#
# 		iniSectionExists    "$iniFile" 'sect1'
#
# 		iniSectionExists    "$iniFile" 'sect:1'
# 	'
# }
#
#
#
# ut_listIniParam_inputParams[1]="$iniFileData_empty"
# ut_listIniParam_inputParams[2]="$iniFileData_noSections"
# ut_listIniParam_inputParams[3]="$iniFileData_noTopLevel"
# ut_listIniParam_inputParams[4]="$iniFileData_topAndSections"
# ut_listIniParam_inputParams[5]="$iniFileData_colonInSectNames"
#
# function ut_listIniParam()
# {
# 	local iniFileData="$1"
#
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$iniFileData" | tee "$iniFile"
# 		#test
# 		listIniParam "$iniFile" '.'
# 		listIniParam "$iniFile" 'sect1'
# 		listIniParam "$iniFile" 'sect2'
# 		listIniParam "$iniFile" 'sect:1'
# 	'
# }
#
#
#
# ut_listIniSection_inputParams[1]="$iniFileData_empty"
# ut_listIniSection_inputParams[2]="$iniFileData_noSections"
# ut_listIniSection_inputParams[3]="$iniFileData_noTopLevel"
# ut_listIniSection_inputParams[4]="$iniFileData_topAndSections"
# ut_listIniSection_inputParams[5]="$iniFileData_colonInSectNames"
#
# function ut_listIniSection()
# {
# 	local iniFileData="$1"
#
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$iniFileData" | tee "$iniFile"
# 		#test
# 		listIniSection "$iniFile"
# 		listIniSection "$iniFile" 'sect.*'
# 		listIniSection "$iniFile" "sect:.*"
# 	'
# }
#
#
#
#
#
# ut_cr_iniParamSetCheckMode_inputParams[0]="iniFile0"
# ut_cr_iniParamSetCheckMode_inputParams[1]="iniFile1"
# ut_cr_iniParamSetCheckMode_inputParams[2]="iniFile2"
#
# function ut_cr_iniParamSetCheckMode()
# {
# 	local sectionName="$1"
# 	local tmpDir="$(mktemp -d --tmpdir utData.XXXXXX)"
#
# 	(
# 		cd "$tmpDir"
# 		utGetUTData "$sectionName" > $sectionName.conf
# 		utRunScript '
# 			#setup
# 			creqInit check 2
# 			cat "'"$sectionName.conf"'"
#
# 			#test
# 			cr_iniParamSet "'"$sectionName.conf"'" . p1 1
# 			cr_iniParamSet "'"$sectionName.conf"'" . p1 wrong
# 			cr_iniParamSet "'"$sectionName.conf"'" sect1 p1 one
# 			cr_iniParamSet "'"$sectionName.conf"'" sect1 p1 wrong
# 		'
# 	)
# 	local exitCode=$?
# 	[ "$tmpDir" ] && rm -rf "$tmpDir" 2>/dev/null
# 	return $exitCode
# }
#
#
#
# ut_setIniParam_inputParams[1]=""
#
# function ut_setIniParam()
# {
# 	local iniFile="$(mktemp)"
#
# 	utRunScript -x '
# 		#setup
# 		touch "$iniFile"
# 		cat "$iniFile"
#
# 		#test
# 		setIniParam "$iniFile" "." p1 one
# 		setIniParam "$iniFile" "." p2 "one two"
# 		setIniParam "$iniFile" "." honey ""
# 		setIniParam "$iniFile" "sect1" p1 "=4"
# 		setIniParam "$iniFile" "sect1" p2 "j/l"
# 		setIniParam "$iniFile" "sect:1" p1 1
# 		setIniParam "$iniFile" "sect:1" p2 2
# 		setIniParam "$iniFile" "sect:1" honey 3
# 		cat "$iniFile"
# 	'
# }
#
#
#
#
#
# declare -A testChars=(
# 	[minus]='-'
# 	[underscore]='_'
# 	[plus]='+'
# 	[equal]='='
# 	[leftBracket]='['
# 	[rightBracket]=']'
# 	[leftBrace]='{'
# 	[rightBrace]='}'
# 	[singleQuote]="'"
# 	[doubleQuote]='"'
# 	[semiColon]=';'
# 	[colon]=':'
# 	[backslash]='\'
# 	[pipe]='|'
# 	[question]='?'
# 	[slash]='/'
# 	[period]='.'
# 	[greaterThan]='>'
# 	[comma]=','
# 	[lessThan]='<'
# 	[tilde]='~'
# 	[tickMark]='`'
# 	[bang]='!'
# 	[atSign]='@'
# 	[hash]='#'
# 	[dollar]='$'
# 	[percent]='%'
# 	[caret]='^'
# 	[apersand]='&'
# 	[asterisk]='*'
# 	[leftParens]='('
# 	[rightParens]=')'
# )
#
# declare -A ut_ini_validChars_inputParams
# for i in "${!testChars[@]}"; do
# 	ut_ini_validChars_inputParams[$i]="${testChars[$i]}"
# done
#
# function ut_ini_validChars()
# {
# 	local testChar="$1"
#
# 	local iniFile="$(mktemp)"
# 	cat >"$iniFile" <<-EOS
# 		[ readDataTest ]
# 		p1=c${testChar}c
# 		test${testChar}Name=hello
#
# 		[ test${testChar}Name ]
# 		p1=howdy
# 	EOS
#
# 	echo "c${testChar}c" > "$iniFile.t1"
# 	echo "c${testChar}c" > "$iniFile.t2"
# 	echo "c${testChar}c" > "$iniFile.t3"
# 	echo "hello" > "$iniFile.t4"
# 	echo "howdy" > "$iniFile.t5"
#
# 	function report()
# 	{
# 		local testFile="$1"
# 		[ "$(sort -u "$testFile" | wc -l)" == "1" ] && echo "PASS" || echo "FAIL"
# 	}
#
# 	utRunScript -x '
# 		#setup
# 		# the testChar: '"$testChar"'
# 		cat "$iniFile"
#
# 		#test
# 		# Using the character in a data string
# 		getIniParam -R var "$iniFile" readDataTest  p1 badValue; echo "$var"; echo "$var" >> "$iniFile.t1"
# 		setIniParam        "$iniFile" writeDataTest p1 "c${testChar}c"
# 		getIniParam -R var "$iniFile" readDataTest  p1 badValue; echo "$var"; echo "$var" >> "$iniFile.t1"
# 		getIniSection      "$iniFile" writeDataTest
# 		report "$iniFile.t1"
#
# 		# Using the character in a data string with single quotes
# 		setIniParam -q1    "$iniFile" singleQuoteSection p1 "c${testChar}c"
# 		getIniParam -R var "$iniFile" singleQuoteSection p1 badValue; echo "$var"; echo "$var" >> "$iniFile.t2"
# 		getIniSection "$iniFile" singleQuoteSection
# 		report "$iniFile.t2"
#
# 		# Using the character in a data string with double quotes
# 		setIniParam -q2    "$iniFile" doubleQuoteSection p1 "c${testChar}c"
# 		getIniParam -R var "$iniFile" doubleQuoteSection p1 badValue; echo "$var"; echo "$var" >> "$iniFile.t3"
# 		getIniSection "$iniFile" doubleQuoteSection
# 		report "$iniFile.t3"
#
# 		# Using the character in a parameter name
# 		getIniParam -R var   "$iniFile" readDataTest  "test${testChar}Name" badValue; echo "$var"; echo "$var" >> "$iniFile.t4"
# 		setIniParam   "$iniFile" writeParamNameTest "test${testChar}Name" "hello"
# 		getIniParam -R var "$iniFile" writeParamNameTest  "test${testChar}Name" badValue; echo "$var"; echo "$var" >> "$iniFile.t4"
# 		getIniSection "$iniFile" writeParamNameTest
# 		report "$iniFile.t4"
#
# 		# Using the character in a section name
# 		getIniParam -R var "$iniFile" "test${testChar}Name" p1 badValue; echo "$var"; echo "$var" >> "$iniFile.t5"
# 		setIniParam   "$iniFile" "NewSection${testChar}Name" foo "howdy"
# 		getIniParam -R var "$iniFile" "NewSection${testChar}Name" foo badValue; echo "$var"; echo "$var" >> "$iniFile.t5"
# 		getIniSection "$iniFile" "NewSection${testChar}Name"
# 		report "$iniFile.t5"
# 	'
# }
#
#
#
#
# ut_ini_validLineFormatsData[1]="hello|||hello"
# ut_ini_validLineFormatsData[2]="hello world|||hello world"
# ut_ini_validLineFormatsData[3]=" hello |||hello"
# ut_ini_validLineFormatsData[4]=" hello world |||hello world"
# ut_ini_validLineFormatsData[5]=" hello#world |||hello"
#
# ut_ini_validLineFormatsData[6]="hello# comment|||hello"
# ut_ini_validLineFormatsData[7]="hello world # comment|||hello world"
# ut_ini_validLineFormatsData[8]=" hello  # comment|||hello"
# ut_ini_validLineFormatsData[9]=" hello world  # comment|||hello world"
# ut_ini_validLineFormatsData[10]=" hello#world  # comment|||hello#world"
#
# function ut_ini_validLineFormats()
# {
# 	local data="${ut_ini_validLineFormatsData[$1]}"
# 	local line="${data%|||*}"
# 	local value="${data#*|||}"
#
# 	local iniFile="$(mktemp)"
# 	echo "p=$line" > $iniFile
#
# 	utRunScript -x '
# 		#setup
# 		# line:  |'"$line"'|
# 		# value: |'"$value"'|
# 		cat "$iniFile"
# 		#test
# 		getIniParam "$iniFile" '.' p
# 		setIniParam "$iniFile" '.' p "'"$value"'"
# 		getIniParam "$iniFile" '.' p
# 		cat "$iniFile"
# 	'
# }
# ut_ini_validLineFormats_inputParams[1]="1"
# ut_ini_validLineFormats_inputParams[2]="2"
# ut_ini_validLineFormats_inputParams[3]="3"
# ut_ini_validLineFormats_inputParams[4]="4"
# ut_ini_validLineFormats_inputParams[5]="5"
#
# ut_ini_validLineFormats_inputParams[6]="6"
# ut_ini_validLineFormats_inputParams[7]="7"
# ut_ini_validLineFormats_inputParams[8]="8"
# ut_ini_validLineFormats_inputParams[9]="9"
# ut_ini_validLineFormats_inputParams[10]="10"
#
#
#
#
# function ut_configLineReplace()
# {
# 	local fileData="$1"
#
# 	local resultLabel=("true" "false")
#
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$fileData" | tee "$iniFile"
# 		cp "$iniFile" "${iniFile}.orig"
# 		#test
# 		configLineReplace --wouldChangeFile "$iniFile" "hello"        ;  echo "${resultLabel[$?]:-unknown}"
# 		configLineReplace --wouldChangeFile "$iniFile" "TEXTNOTINFILE";  echo "${resultLabel[$?]:-unknown}"
# 		configLineReplace --isAlreadySet    "$iniFile" "hello"        ;  echo "${resultLabel[$?]:-unknown}"
# 		configLineReplace --isAlreadySet    "$iniFile" "TEXTNOTINFILE";  echo "${resultLabel[$?]:-unknown}"
# 	'
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$fileData" | tee "$iniFile"
# 		cp "$iniFile" "${iniFile}.orig"
# 		#test
# 		configLineReplace "$iniFile" "hello"
# 		diff "${iniFile}.orig" "$iniFile" || true
# 	'
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$fileData" | tee "$iniFile"
# 		cp "$iniFile" "${iniFile}.orig"
# 		#test
# 		configLineReplace "$iniFile" "hello" ".*hello.*"
# 		diff "${iniFile}.orig" "$iniFile" || true
# 	'
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$fileData" | tee "$iniFile"
# 		cp "$iniFile" "${iniFile}.orig"
# 		#test
# 		configLineReplace "$iniFile" "foo=5" "^[[:space:]]*foo[[:space:]]*="
# 		diff "${iniFile}.orig" "$iniFile" || true
# 	'
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$fileData" | tee "$iniFile"
# 		cp "$iniFile" "${iniFile}.orig"
# 		#test
# 		configLineReplace "$iniFile" "foo=blue" "^[[:space:]]*foo[[:space:]]*="
# 		diff "${iniFile}.orig" "$iniFile" || true
# 		'
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$fileData" | tee "$iniFile"
# 		cp "$iniFile" "${iniFile}.orig"
# 		#test
# 		configLineReplace "$iniFile" "/var/www/"
# 		diff "${iniFile}.orig" "$iniFile" || true
# 	'
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$fileData" | tee "$iniFile"
# 		cp "$iniFile" "${iniFile}.orig"
# 		#test
# 		configLineReplace "$iniFile" "/var/www/*"
# 		diff "${iniFile}.orig" "$iniFile" || true
# 	'
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$fileData" | tee "$iniFile"
# 		cp "$iniFile" "${iniFile}.orig"
# 		#test
# 		configLineReplace "$iniFile" "path=/var/www/" ".*=/var/www/"
# 		diff "${iniFile}.orig" "$iniFile" || true
# 	'
# 	utRunScript -x '
# 		#setup
# 		local iniFile="$(mktemp)"
# 		echo "$fileData" | tee "$iniFile"
# 		cp "$iniFile" "${iniFile}.orig"
# 		#test
# 		configLineReplace "$iniFile" "path=\"5\"" "path=.*"
# 		diff "${iniFile}.orig" "$iniFile" || true
# 	'
# }
# ut_configLineReplace_inputParams[1]='
# # this is a comment
# foo=5
# foo="5"
# bar=this
# foo=that
# '
# ut_configLineReplace_inputParams[2]='
# hello
# # this is a comment
# #hello
# hello5
# hello goo
# '
# ut_configLineReplace_inputParams[3]='
# hello
# #hello
# hello5
# hello goo
# '
# ut_configLineReplace_inputParams[4]='
# hello
# # this is a comment
# foo="blue"
# foo=5
# path=/var/www/
# path2=/var/www/
# /var/www/*
# hello5
# hello goo
# '


# this should be the last line of any ut script
unitTestCntr "$@"
